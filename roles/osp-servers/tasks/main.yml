---
# tasks file for roles/osp-servers
- name: Create server instances
  os_server:
    cloud:            "{{ openstack_cloud                           | default('openstack') }}"
    name:             "{{ __openstack_server.instance_name }}"
    state:            "{{ __openstack_server.state                  | default('present') }}"
    image:            "{{ __openstack_server.image                  | default('rhel-guest') }}"
    flavor:           "{{ __openstack_server.flavor                 | default('m1.medium') }}"
    key_name:         "{{ __openstack_server.key_name               | default('ansible_ssh') }}"
    wait:             "{{ __openstack_server.wait                   | default('yes') }}"
    security_groups:  "{{ __openstack_server.security_group_name }}"
    delete_fip:       "{{__openstack_server.delete_fip              | default(true) }}"
    meta: "group={{ __openstack_server.group }},deployment_name={{ __openstack_server.deployment }}"
    nics:
      - net-name: int_network
    userdata: |
      #!/bin/bash
      curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
      cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
  loop: "{{ openstack_servers }}"      
  loop_control:
    loop_var: __openstack_server
  async: 900
  poll: 0
  register: r_instances

- name: Wait for async OSP instance creation to complete
  async_status: "jid={{ item.ansible_job_id }}"
  register: r_wait
  until: r_wait.finished
  retries: 900
  loop: "{{ r_instances.results }}"

- name: Debug instances 
  debug:
    msg: "Server is {{ __instance.__openstack_server.instance_name }}"
    verbosity: 2
  loop: "{{ r_instances.results }}"
  loop_control:
    loop_var: __instance
...
